{"ast":null,"code":"var _jsxFileName = \"D:\\\\New folder\\\\hotelbooking system\\\\frontend\\\\src\\\\component\\\\common\\\\RoomSearch.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport ApiService from '../../service/ApiService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RoomSearch = ({\n  handleSearchResult\n}) => {\n  _s();\n  const [startDate, setStartDate] = useState(null);\n  const [endDate, setEndDate] = useState(null);\n  const [roomType, setRoomType] = useState('');\n  const [roomTypes, setRoomTypes] = useState([]);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    const fetchRoomTypes = async () => {\n      try {\n        const types = await ApiService.getRoomTypes();\n        const defaultTypes = [\"Single\", \"Double\", \"Deluxe\", \"Suite\", \"Family\"];\n        const uniqueTypes = Array.from(new Set([...defaultTypes, ...types]));\n        setRoomTypes(uniqueTypes);\n      } catch (error) {\n        console.error('Error fetching room types:', error.message);\n        // fallback if API fails\n        setRoomTypes([\"Single\", \"Double\", \"Deluxe\", \"Suite\", \"Family\"]);\n      }\n    };\n    fetchRoomTypes();\n  }, []);\n\n  /**This methods is going to be used to show errors */\n  const showError = (message, timeout = 5000) => {\n    setError(message);\n    setTimeout(() => {\n      setError('');\n    }, timeout);\n  };\n\n  /**THis is going to be used to fetch available rooms from database base on seach data that'll be passed in */\n  const handleInternalSearch = async () => {\n    if (!startDate || !endDate || !roomType) {\n      showError('Please select all fields');\n      return false;\n    }\n    try {\n      // Convert startDate to the desired format\n      const formattedStartDate = startDate ? startDate.toISOString().split('T')[0] : null;\n      const formattedEndDate = endDate ? endDate.toISOString().split('T')[0] : null;\n      // Call the API to fetch available rooms\n      const response = await ApiService.getAvailableRoomsByDateAndType(formattedStartDate, formattedEndDate, roomType);\n\n      // Check if the response is successful\n      if (response.statusCode === 200) {\n        if (response.roomList.length === 0) {\n          showError('Room not currently available for this date range on the selected room type.');\n          return;\n        }\n        handleSearchResult(response.roomList);\n        setError('');\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      showError(\"Unknown error occurred: \" + (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || error.message));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-field\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Check-in Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n          selected: startDate,\n          onChange: date => setStartDate(date),\n          dateFormat: \"dd/MM/yyyy\",\n          placeholderText: \"Select Check-in Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-field\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Check-out Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n          selected: endDate,\n          onChange: date => setEndDate(date),\n          dateFormat: \"dd/MM/yyyy\",\n          placeholderText: \"Select Check-out Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-field\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Room Type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: roomType,\n          onChange: e => setRoomType(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            disabled: true,\n            value: \"\",\n            children: \"Select Room Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), roomTypes.map(roomType => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: roomType,\n            children: roomType\n          }, roomType, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"home-search-button\",\n        onClick: handleInternalSearch,\n        children: \"Search Rooms\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(RoomSearch, \"gV1/IZHf5eN7qZ02IA9Kw0WKb/w=\");\n_c = RoomSearch;\nexport default RoomSearch;\nvar _c;\n$RefreshReg$(_c, \"RoomSearch\");","map":{"version":3,"names":["React","useState","useEffect","DatePicker","ApiService","jsxDEV","_jsxDEV","RoomSearch","handleSearchResult","_s","startDate","setStartDate","endDate","setEndDate","roomType","setRoomType","roomTypes","setRoomTypes","error","setError","fetchRoomTypes","types","getRoomTypes","defaultTypes","uniqueTypes","Array","from","Set","console","message","showError","timeout","setTimeout","handleInternalSearch","formattedStartDate","toISOString","split","formattedEndDate","response","getAvailableRoomsByDateAndType","statusCode","roomList","length","_error$response","_error$response$data","data","children","className","fileName","_jsxFileName","lineNumber","columnNumber","selected","onChange","date","dateFormat","placeholderText","value","e","target","disabled","map","onClick","_c","$RefreshReg$"],"sources":["D:/New folder/hotelbooking system/frontend/src/component/common/RoomSearch.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport ApiService from '../../service/ApiService';\n\nconst RoomSearch = ({ handleSearchResult }) => {\n  const [startDate, setStartDate] = useState(null);\n  const [endDate, setEndDate] = useState(null);\n  const [roomType, setRoomType] = useState('');\n  const [roomTypes, setRoomTypes] = useState([]);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    const fetchRoomTypes = async () => {\n      try {\n        const types = await ApiService.getRoomTypes();\n        const defaultTypes = [\"Single\", \"Double\", \"Deluxe\", \"Suite\", \"Family\"];\n        const uniqueTypes = Array.from(new Set([...defaultTypes, ...types]));\n        setRoomTypes(uniqueTypes);\n      } catch (error) {\n        console.error('Error fetching room types:', error.message);\n        // fallback if API fails\n        setRoomTypes([\"Single\", \"Double\", \"Deluxe\", \"Suite\", \"Family\"]);\n      }\n    };\n    fetchRoomTypes();\n  }, []);\n\n  /**This methods is going to be used to show errors */\n  const showError = (message, timeout = 5000) => {\n    setError(message);\n    setTimeout(() => {\n      setError('');\n    }, timeout);\n  };\n\n  /**THis is going to be used to fetch available rooms from database base on seach data that'll be passed in */\n  const handleInternalSearch = async () => {\n    if (!startDate || !endDate || !roomType) {\n      showError('Please select all fields');\n      return false;\n    }\n    try {\n      // Convert startDate to the desired format\n      const formattedStartDate = startDate ? startDate.toISOString().split('T')[0] : null;\n      const formattedEndDate = endDate ? endDate.toISOString().split('T')[0] : null;\n      // Call the API to fetch available rooms\n      const response = await ApiService.getAvailableRoomsByDateAndType(formattedStartDate, formattedEndDate, roomType);\n\n      // Check if the response is successful\n      if (response.statusCode === 200) {\n        if (response.roomList.length === 0) {\n          showError('Room not currently available for this date range on the selected room type.');\n          return;\n        }\n        handleSearchResult(response.roomList);\n        setError('');\n      }\n    } catch (error) {\n      showError(\"Unknown error occurred: \" + (error.response?.data?.message || error.message));\n    }\n  };\n\n  return (\n    <section>\n      <div className=\"search-container\">\n        <div className=\"search-field\">\n          <label>Check-in Date</label>\n          <DatePicker\n            selected={startDate}\n            onChange={(date) => setStartDate(date)}\n            dateFormat=\"dd/MM/yyyy\"\n            placeholderText=\"Select Check-in Date\"\n          />\n        </div>\n        <div className=\"search-field\">\n          <label>Check-out Date</label>\n          <DatePicker\n            selected={endDate}\n            onChange={(date) => setEndDate(date)}\n            dateFormat=\"dd/MM/yyyy\"\n            placeholderText=\"Select Check-out Date\"\n          />\n        </div>\n\n        <div className=\"search-field\">\n          <label>Room Type</label>\n          <select value={roomType} onChange={(e) => setRoomType(e.target.value)}>\n            <option disabled value=\"\">\n              Select Room Type\n            </option>\n            {roomTypes.map((roomType) => (\n              <option key={roomType} value={roomType}>\n                {roomType}\n              </option>\n            ))}\n          </select>\n        </div>\n        <button className=\"home-search-button\" onClick={handleInternalSearch}>\n          Search Rooms\n        </button>\n      </div>\n      {error && <p className=\"error-message\">{error}</p>}\n    </section>\n  );\n};\n\nexport default RoomSearch;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}